USE `joingo`;
DROP procedure IF EXISTS `SP_I_JoinRequest`;

USE `joingo`;
DROP procedure IF EXISTS `joingo`.`SP_I_JoinRequest`;
;

DELIMITER $$
USE `joingo`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_I_JoinRequest`(
   IN p_joinReqId VARCHAR(255),
    IN p_userId VARCHAR(255),
    IN p_desplace_id VARCHAR(255),
    IN p_startLon FLOAT,
    IN p_startLat FLOAT,
    IN p_destLon FLOAT,
    IN p_destLat FLOAT, 
IN p_requestStatus INT,
IN p_vehicletype INT, 
IN p_scheduleTime DATETIME,
IN p_tripType INT,
IN p_SegmentDistance INT
 
)
BEGIN
DECLARE new_id VARCHAR(255);

set new_id = (select next_val from joinreq_sequence);
SET SQL_SAFE_UPDATES = 0;
update joinreq_sequence set next_val = next_val + 1  where next_val = new_id;
SET SQL_SAFE_UPDATES = 1;
      
    -- SET new_id = (SELECT next_val from passenger_Sequence);
INSERT INTO tbl_Join_Request (id,desplace_id, dest_lat, dest_lon, joinreqid, start_lat, start_lon, userid, req_vehicletype, request_status, segment_distance, schedule_time, trip_type)
    VALUES (new_id,p_desplace_id,p_destLat,p_destLon,p_joinReqId,p_startLat,p_startLon,p_userId,p_vehicletype,p_requestStatus,p_SegmentDistance,p_scheduleTime,p_tripType);

END$$

DELIMITER ;
;

